// Test generated by RoostGPT for test dm-example-4 using AI Model gpt

package com.example.web;

import com.example.exception.ToDoException;
import com.example.model.ToDo;
import com.example.service.ToDoService;
import com.example.util.PayloadValidator;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class ToDoController_saveToDo81c68cf835Test {

    @InjectMocks
    ToDoController toDoController;

    @Mock
    ToDoService toDoService;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testSaveToDo_success() throws ToDoException {
        ToDo payload = new ToDo();
        payload.setTitle("Test ToDo");
        payload.setDescription("This is a test ToDo");

        when(toDoService.saveToDo(payload)).thenReturn(payload);

        ResponseEntity<ToDo> response = toDoController.saveToDo(payload);

        assertEquals(HttpStatus.OK, response.getStatusCode());
        assertEquals(payload, response.getBody());
    }

    @Test
    public void testSaveToDo_fail() throws ToDoException {
        ToDo payload = new ToDo();
        payload.setId(1L);
        payload.setTitle("Test ToDo");
        payload.setDescription("This is a test ToDo");

        ResponseEntity<ToDo> response;
        try {
            response = toDoController.saveToDo(payload);
        } catch (ToDoException ex) {
            assertEquals("Payload malformed, id must not be defined", ex.getMessage());
            return;
        }

        // If the exception is not thrown, then the test has failed.
        assert false;
    }
}
