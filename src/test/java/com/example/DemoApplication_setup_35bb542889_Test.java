// Test generated by RoostGPT for test dmtest using AI Type Open AI and AI Model gpt-4-0314

package com.example;

import com.example.model.ToDo;
import com.example.repository.ToDoRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.CommandLineRunner;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
public class DemoApplication_setup_35bb542889_Test {

    @InjectMocks
    private DemoApplication demoApplication;

    @Mock
    private ToDoRepository toDoRepository;

    private CommandLineRunner commandLineRunner;

    @BeforeEach
    public void setUp() {
        commandLineRunner = demoApplication.setup(toDoRepository);
    }

    @Test
    public void testSetup_success() throws Exception {
        commandLineRunner.run();
        verify(toDoRepository, times(1)).save(new ToDo("Remove unused imports", true));
        verify(toDoRepository, times(1)).save(new ToDo("Clean the code", true));
        verify(toDoRepository, times(1)).save(new ToDo("Build the artifacts", false));
        verify(toDoRepository, times(1)).save(new ToDo("Deploy the jar file", true));
    }

    @Test
    public void testSetup_noArgs() throws Exception {
        commandLineRunner.run(new String[]{});
        verify(toDoRepository, times(1)).save(new ToDo("Remove unused imports", true));
        verify(toDoRepository, times(1)).save(new ToDo("Clean the code", true));
        verify(toDoRepository, times(1)).save(new ToDo("Build the artifacts", false));
        verify(toDoRepository, times(1)).save(new ToDo("Deploy the jar file", true));
    }
}
