// Test generated by RoostGPT for test dm-example-4 using AI Model gpt

package com.example.exception;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import static org.junit.jupiter.api.Assertions.assertEquals;

@ExtendWith(MockitoExtension.class)
public class RestExceptionHandler_exceptionHandlera44a79483bTest {

    @InjectMocks
    private RestExceptionHandler restExceptionHandler;

    private Exception ex;

    @BeforeEach
    public void setUp() {
        ex = new Exception("Test Exception");
    }

    @Test
    public void testExceptionHandler_withException() {
        ResponseEntity<ErrorResponse> responseEntity = restExceptionHandler.exceptionHandler(ex);
        assertEquals(HttpStatus.BAD_REQUEST, responseEntity.getStatusCode());
        assertEquals("The request could not be understood by the server due to malformed syntax.", responseEntity.getBody().getMessage());
        assertEquals(HttpStatus.BAD_REQUEST.value(), responseEntity.getBody().getErrorCode());
    }

    @Test
    public void testExceptionHandler_withNullException() {
        ResponseEntity<ErrorResponse> responseEntity = restExceptionHandler.exceptionHandler(null);
        assertEquals(HttpStatus.BAD_REQUEST, responseEntity.getStatusCode());
        assertEquals("The request could not be understood by the server due to malformed syntax.", responseEntity.getBody().getMessage());
        assertEquals(HttpStatus.BAD_REQUEST.value(), responseEntity.getBody().getErrorCode());
    }
}
