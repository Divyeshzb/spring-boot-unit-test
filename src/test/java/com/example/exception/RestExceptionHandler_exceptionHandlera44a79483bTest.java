// Test generated by RoostGPT for test dm-example-4 using AI Model gpt

package com.example.exception;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

public class RestExceptionHandler_exceptionHandlera44a79483bTest {

    @InjectMocks
    RestExceptionHandler restExceptionHandler;

    @Before
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testExceptionHandler_withException() {
        Exception ex = new Exception();
        ResponseEntity<ErrorResponse> response = restExceptionHandler.exceptionHandler(ex);

        Assert.assertNotNull(response);
        Assert.assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
        Assert.assertEquals(HttpStatus.BAD_REQUEST.value(), response.getBody().getErrorCode());
        Assert.assertEquals("The request could not be understood by the server due to malformed syntax.", response.getBody().getMessage());
    }

    @Test
    public void testExceptionHandler_withNullException() {
        ResponseEntity<ErrorResponse> response = restExceptionHandler.exceptionHandler(null);

        Assert.assertNotNull(response);
        Assert.assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
        Assert.assertEquals(HttpStatus.BAD_REQUEST.value(), response.getBody().getErrorCode());
        Assert.assertEquals("The request could not be understood by the server due to malformed syntax.", response.getBody().getMessage());
    }
}
